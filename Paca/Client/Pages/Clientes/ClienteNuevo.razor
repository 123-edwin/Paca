@page "/clientes/nuevo"
@using Paca.Shared.Modelos;
@inject HttpClient http
@inject NavigationManager navegar

<h3>Cliente Nuevo</h3>
<EditForm Model="elCliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3"
    <label for="txtNombre" class="form-label">Nombre</label>
    <InputText id="txtNombre" class="form-control" @bind-Value="elCliente.Nombre"/>
    <ValidationMessage For="(()=>elCliente.Nombre)"/>
</div>

    <div class="mb-3"
    <label for="txtCorreo" class="form-label">Correo</label>
    <InputText id="txtCorreo" class="form-control" @bind-Value="elCliente.Correo"/>
    <ValidationMessage For="(()=>elCliente.Correo)"/>
</div>

    <div class="mb-3"
    <label for="txtDireccion" class="form-label">Direccion</label>
    <InputText id="txtDireccion" class="form-control" @bind-Value="elCliente.Direccion"/>
    <ValidationMessage For="(()=>elCliente.Direccion)"/>
</div>
    <button type="submit" class="btn btn-primary">Guardar</button>


</EditForm>

@code {
    
        private Cliente elCliente = new Cliente();

        private async Task Guardar()
        {
            try
            {
                var response = await http.PostAsJsonAsync("api/clientes", elCliente);
                if (response.IsSuccessStatusCode)
                {
                    // La solicitud fue exitosa
                    navegar.NavigateTo("/clientes");
                }
                else
                {
                    // Hubo un problema en el controlador
                    var errorMessage = await response.Content.ReadAsStringAsync();
                    // Maneja el mensaje de error según tus necesidades
                    Console.WriteLine(errorMessage);
                }
            }
            catch (Exception ex)
            {
                // Ocurrió una excepción al realizar la solicitud
                Console.WriteLine("Error al realizar la solicitud: " + ex.Message);
            }
        }
    


}
