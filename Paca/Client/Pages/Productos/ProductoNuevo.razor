@page "/productos/nuevo"
@using Paca.Shared.Modelos;
@inject HttpClient http
@inject NavigationManager navegar
<h3>ProductoNuevo</h3>
<EditForm Model="elProducto" OnValidSubmit="Guardar">
<DataAnnotationsValidator/>
<div class="mb-3"
    <label for="txtNombre" class="form-label">Nombre del producto</label>
    <InputText id="txtNombre" class="form-control" @bind-Value="elProducto.Nombre"/>
    <ValidationMessage For="(()=>elProducto.Nombre)"/>
</div>

<div class="mb-3"
    <label for="txtNombre" class="form-label">Costo del producto</label>
    <InputNumber id="txtNombre" class="form-control" @bind-Value="elProducto.Costo"/>
    <ValidationMessage For="(()=>elProducto.Costo)"/>
</div>

<div class="mb-3"
    <label for="txtNombre" class="form-label">Cantidad de existencias</label>
    <InputNumber id="txtNombre" class="form-control" @bind-Value="elProducto.CantidadExistencias"/>
    <ValidationMessage For="(()=>elProducto.CantidadExistencias)"/>
</div>
    <button type="submit" class="btn btn-primary">Guardar</button>
   


</EditForm>
@code {
    private Producto elProducto = new Producto();

    private async Task Guardar()
    {
        try
        {
            var response = await http.PostAsJsonAsync("api/productos", elProducto);
            if (response.IsSuccessStatusCode)
            {
                // La solicitud fue exitosa
                navegar.NavigateTo("/productos");
            }
            else
            {
                // Hubo un problema en el controlador
                var errorMessage = await response.Content.ReadAsStringAsync();
                // Maneja el mensaje de error según tus necesidades
                Console.WriteLine(errorMessage);
            }
        }
        catch (Exception ex)
        {
            // Ocurrió una excepción al realizar la solicitud
            Console.WriteLine("Error al realizar la solicitud: " + ex.Message);
        }
    }

}
